[
  {
    "ContainingType": "Voxerra_API.Controllers.Authenticate.AuthenticateController",
    "Method": "Authenticate",
    "RelativePath": "Authenticate/Authenticate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Voxerra_API.Controllers.Authenticate.AuthenticateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Voxerra_API.Controllers.Message.MessageController",
    "Method": "Initialize",
    "RelativePath": "Message/Initialize",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Voxerra_API.Controllers.Message.MessageInitializeRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Voxerra_API.Controllers.MessageCenter.MessageCenterController",
    "Method": "Initialize",
    "RelativePath": "MessageCenter/Initialize",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Voxerra_API.Controllers.Registration.RegistrationController",
    "Method": "IsEmailUnique",
    "RelativePath": "Registration/IsEmailUnique",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Voxerra_API.Controllers.Registration.IsEmailUniqueRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Voxerra_API.Controllers.Registration.RegistrationController",
    "Method": "IsUserNameUnique",
    "RelativePath": "Registration/IsUserNameUnique",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Voxerra_API.Controllers.Registration.IsUserNameUniqueRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Voxerra_API.Controllers.Registration.RegistrationController",
    "Method": "RegisterUser",
    "RelativePath": "Registration/RegisterUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Voxerra_API.Controllers.Registration.RegistrationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Voxerra_API.Controllers.SendEmail",
    "Method": "SendEmailToUser",
    "RelativePath": "SendEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Voxerra_API.Controllers.EmailRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Voxerra_API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Voxerra_API.WeatherForecast, Voxerra_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]